@model RoleViewModel
@{
    ViewData["Title"] = "Edit Role";
    var controllers = (IEnumerable<MvcControllerInfo>)ViewData["Controllers"];
}

<h2>Edit Role</h2>

<hr />

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group row">
                <label asp-for="Name" class="col-md-2 col-form-label"></label>
                <div class="col-md-10">
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-3 col-form-label">Access List</label>
                <div class="col-md-9">
                    <ol id="tree">
                        @foreach (var controller in controllers)
                        {
                            var selectedController = Model?.SelectedControllers?.SingleOrDefault(c => c.Id == controller.Id);
                            var name = controller.DisplayName ?? controller.Name;

                            <li class="controller" data-value="@controller.Name">

                                <input type="hidden" class="area" value="@controller.AreaName" />
                                @name
                                @if (controller.Actions.Any())
                                {
                                    <ul>
                                        @foreach (var action in controller.Actions)
                                        {
                                            {
                                                name = action.DisplayName ?? action.Name;
                                            }
                                            <li data-value="@action.Name"
                                                @if (selectedController != null && selectedController.Actions.Any(a => a.Id == action.Id)) { <text> data-checked='1' </text> }>
                                                @name
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    </ol>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}